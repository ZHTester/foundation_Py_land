线程 vs 进程

进程: 资源的集合
     至少包含一个线程
一个进程里面至少包含一个线程 那么这个线程就是主线程

线程：操作系统最小的调度单位
     线程之间的内存是共享的
     两个线程共同才做一个数据，导致结果不正确，是因为没加锁。
     线程同时修改同一份数据的时候，必须加所lock又叫互斥锁
     递归锁，实现锁中有锁

join

信号量 lock 同一时间可以同时修改多个线程的值


守护线程: 守护线程服务于非守护线程 非守护线程是主人 守护线程是仆人

queue  解耦   使得程序直接实现松耦合
       提高处理效率

       FIFO first in first out  先进先出
       LIFO last in first out 后进先出

       列表的队列 队列只有一份数据 失去了就不存在 队列的数据失去了还是存在的

消费者生产者 就是实现一个解耦的一个过程

event
-----------------------------多线程-----------------------------

python的多线程其实就是单线程的上下文切换  线程切换也是消耗资源的
python的多线程不适合cpu密集操作性的任务 适合IO密集型操作的任务

IO 操作不占用cpu
计算占用cpu 1+1

进程之间是独立的
八核是代表同一时间只能干八件事

多进程就可以解决多核的问题了


进程

进程锁

----- 进程池的概念就是同一时间有多少个进程在CPU上运行 -------

---------------------
--------第10周第11期--------------
---------------------
